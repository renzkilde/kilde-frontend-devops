name: Bump Version

on:
  push:
    branches:
      - develop   # or the branch you want to track

permissions:
  contents: write   # allow workflow to push commits

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches the entire history
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Get last commit message for 'major', 'minor', 'patch' strings. Default to 'patch'
      # The behavior if commit message has both minor and major. 
      # Since the 'major' check comes first, any commit containing 'major' will always trigger a major bump, even if it also contains "minor"
      - name: Determine bump type
        id: bump
        run: |
          bump="patch"
          
          msg=$(git log -1 --pretty=%B)

          if echo "$msg" | grep -qi "major"; then
            bump="major"
          elif echo "$msg" | grep -qi "minor"; then
            bump="minor"
          fi

          echo "bump=$bump" >> $GITHUB_OUTPUT

      # Determine environment prefix based on branch
      - name: Determine environment
        id: env
        run: |
          if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            ENV_PREFIX="dev"
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            ENV_PREFIX="stg"
          elif [[ "${GITHUB_REF##*/}" == "production" ]]; then
            ENV_PREFIX="prd"
          else
            ENV_PREFIX="unknown"
          fi
          echo "env_prefix=$ENV_PREFIX" >> $GITHUB_OUTPUT

      - name: Bump version and tag
        id: version
        run: |
          # Bump version in package.json
          npm version ${{ steps.bump.outputs.bump }} --no-git-tag-version

          # Capture new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "bumped_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Configure Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Commit the version bump
          git add package.json package-lock.json || true
          git commit -m "ci: bump ${{ steps.bump.outputs.bump }} version" || echo "No changes to commit"
          git push

          # Create Git tag with the new version
          TAG="${{ steps.env.outputs.env_prefix }}-v$NEW_VERSION"
          git tag -a "$TAG" -m "Version $NEW_VERSION for ${{ steps.env.outputs.env_prefix }}"
          git push origin "$TAG"
